/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class ManageCustomersPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomersPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private EcoSystem ecosystem;
    private Customer customer;
    public ManageCustomersPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;        
        this.account = account;
        this.ecosystem = ecosystem;
        //populateComboBox();
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        lblCName = new javax.swing.JLabel();
        txtCName = new javax.swing.JTextField();
        lblCUserName = new javax.swing.JLabel();
        txtCUserName = new javax.swing.JTextField();
        lblCPwd = new javax.swing.JLabel();
        txtCPwd = new javax.swing.JTextField();
        lblCMobile = new javax.swing.JLabel();
        txtCMobile = new javax.swing.JTextField();
        lblCAddress = new javax.swing.JLabel();
        txtCAddress = new javax.swing.JTextField();
        lblCID = new javax.swing.JLabel();
        txtCID = new javax.swing.JTextField();
        btnAddCust = new javax.swing.JButton();
        btnModifyCust = new javax.swing.JButton();
        btnDeleteCust = new javax.swing.JButton();
        btnViewCust = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 0, 51));

        lblTitle.setBackground(new java.awt.Color(102, 255, 255));
        lblTitle.setFont(new java.awt.Font("Sitka Small", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Customers");
        lblTitle.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "User Name", "Password", "Mobile Number", "Address"
            }
        ));
        jScrollPane1.setViewportView(tblCustomer);

        lblCName.setText("Customer Name:");

        lblCUserName.setText("User Name:");

        lblCPwd.setText("Password:");

        lblCMobile.setText("Mobile Number: ");

        lblCAddress.setText("Address: ");

        lblCID.setText("Customer ID:");

        btnAddCust.setText("Create");
        btnAddCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCustActionPerformed(evt);
            }
        });

        btnModifyCust.setText("Modify");
        btnModifyCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyCustActionPerformed(evt);
            }
        });

        btnDeleteCust.setText("Delete");
        btnDeleteCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustActionPerformed(evt);
            }
        });

        btnViewCust.setText("View");
        btnViewCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCustActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(261, 261, 261)
                                    .addComponent(btnAddCust)
                                    .addGap(31, 31, 31)
                                    .addComponent(btnModifyCust)
                                    .addGap(28, 28, 28)
                                    .addComponent(btnDeleteCust))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(185, 185, 185)
                                    .addComponent(lblCAddress)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(36, 36, 36)
                                            .addComponent(lblCUserName)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtCUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(lblCID)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblCName)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblCMobile)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtCMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblCPwd)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtCPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(btnViewCust))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle)
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewCust)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCID)
                    .addComponent(txtCID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCName)
                    .addComponent(txtCName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCUserName)
                    .addComponent(txtCUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPwd)
                    .addComponent(txtCPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCMobile)
                    .addComponent(txtCMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCAddress)
                    .addComponent(txtCAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCust)
                    .addComponent(btnModifyCust)
                    .addComponent(btnDeleteCust))
                .addContainerGap(187, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCustActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnAddCustActionPerformed

    private void btnModifyCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyCustActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCustomer.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        Customer selectedCustomer = (Customer)model.getValueAt(selectedRowIndex, 0);
        String name = txtCName.getText();
        String userName = txtCUserName.getText();
        String password = txtCPwd.getText();

        
        ArrayList<Customer> cust = ecosystem.getCustomerDirectory().customerDetails();
        for(Customer c: cust)
        {
            if(c.getName().equals(selectedCustomer.getName()))
            {
                c.setName(name);
                c.returnUserAccount().setUsername(userName);
                c.returnUserAccount().setPassword(password);
                c.setUserName(userName);
                c.setPassword(password);
                c.setMobileNO(Long.parseLong(txtCMobile.getText()));
                c.setAddress(txtCAddress.getText());
                break;
            }
            
        }
        this.ecosystem.getCustomerDirectory().setCustomerDetails(cust);
        JOptionPane.showMessageDialog(this, "Customer Record Updated Successfully.");
        
        txtCName.setText("");
        txtCUserName.setText("");
        txtCPwd.setText("");
        txtCMobile.setText("");
        txtCAddress.setText("");
        populateTable();
    }//GEN-LAST:event_btnModifyCustActionPerformed

    private void btnDeleteCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblCustomer.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        Customer selectedCustomer = (Customer)model.getValueAt(selectedRow, 0);
        // First delete the customer from employee
        this.ecosystem.getEmployeeDirectory().deleteEmployee(selectedCustomer.getName());
        // And thne delete the userAccount
        this.ecosystem.getUserAccountDirectory().deleteUserAccount(
                this.ecosystem.getCustomerDirectory().customerDetails().
                        get(selectedRow).returnUserAccount()
        );
        // finally delete the user from customer directory
        this.ecosystem.getCustomerDirectory().deleteCustomer(selectedCustomer);
        
        JOptionPane.showMessageDialog(this, "Customer Record Deleted.");
        for(Customer ck : this.ecosystem.getCustomerDirectory().customerDetails()){
            System.out.println(ck.getName());
        }
        this.populateTable();
    }//GEN-LAST:event_btnDeleteCustActionPerformed

    private void btnViewCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCustActionPerformed
        // TODO add your handling code here:
         int selectedRowIndex = tblCustomer.getSelectedRow();
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        Customer selectedCustomer = (Customer)model.getValueAt(selectedRowIndex, 0);
        txtCName.setText("");
        txtCName.setText(selectedCustomer.getName());
        txtCUserName.setText("");
        txtCUserName.setText(selectedCustomer.getUserName());
        txtCPwd.setText("");
        txtCPwd.setText(selectedCustomer.getPassword());
        txtCAddress.setText("");
        txtCAddress.setText(selectedCustomer.getAddress());
        txtCMobile.setText("");
        txtCMobile.setText(String.valueOf(selectedCustomer.getMobileNO()));
    }//GEN-LAST:event_btnViewCustActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
       SystemAdminWorkAreaJPanel  systemAdminWorkAreaJPanel = new SystemAdminWorkAreaJPanel(userProcessContainer, account, ecosystem);
       userProcessContainer.add("systemAdminWorkAreaJPanel", systemAdminWorkAreaJPanel);
       CardLayout layout = (CardLayout) userProcessContainer.getLayout();
       layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

     private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
        model.setRowCount(0);

        for(Customer cust : this.ecosystem.getCustomerDirectory().customerDetails()){
            Object[] row = new Object[5];
            row[1] = cust;
            row[2] = cust.getUserName();
            row[3] = cust.getPassword();
            row[4] = cust.getMobileNO();
            row[5] = cust.getAddress();
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCust;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteCust;
    private javax.swing.JButton btnModifyCust;
    private javax.swing.JButton btnViewCust;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCAddress;
    private javax.swing.JLabel lblCID;
    private javax.swing.JLabel lblCMobile;
    private javax.swing.JLabel lblCName;
    private javax.swing.JLabel lblCPwd;
    private javax.swing.JLabel lblCUserName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtCAddress;
    private javax.swing.JTextField txtCID;
    private javax.swing.JTextField txtCMobile;
    private javax.swing.JTextField txtCName;
    private javax.swing.JTextField txtCPwd;
    private javax.swing.JTextField txtCUserName;
    // End of variables declaration//GEN-END:variables
}



